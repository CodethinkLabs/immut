# Shell library for Immut yarns.


run_in_docker(){
    cid_file="$1"
    shift
    docker exec `cat "$cid_file"` sh -c "$@"
}

get_docker_ip(){
    cid_file="$1"
    cid=$(cat "$DATADIR/$cid_file")
    ip="$(docker inspect  --format '{{ .NetworkSettings.IPAddress }}' $cid)"
    echo $ip
}




run_command()
{
    {
        cd "$DATADIR"

        # Extract cmd filename first, and shift
        cmd_file_name="$1"
        shift

        # Set env variables for some commands
        case "$cmd_file_name" in
            "git-clone") export GIT_TERMINAL_PROMPT=0 ;;
        esac

        # Execute command
        echo "$@" > "$DATADIR/$cmd_filename-cmd"
        set +e
        "$@" 2> "$DATADIR/$cmd_filename-err" > "$DATADIR/$cmd_filename-out"
        local exit_code="$?"
        set -e
        cat "$DATADIR/$cmd_filename-err" >&2
        cat "$DATADIR/$cmd_filename-out"
        return "$exit_code"
    }
}


attempt_command(){
    cmd_filename=$(replace_spaces_in_cmd "$1")

    case "$1" in
        "wget") cmd="$1 --content-on-error" ;;
        *) cmd="$1" ;;
    esac
    cmd="$cmd_filename $cmd"

    shift
    if run_command $cmd "$@"
    then
        echo 0 > "$DATADIR/$cmd_filename-exit"
    else
        echo "$?" > "$DATADIR/$cmd_filename-exit"
    fi
}


die()
{
    echo "ERROR: $@" 1>&2
    exit 1
}


replace_spaces_in_cmd(){
    echo $1 | sed 's/ /-/g'
}
